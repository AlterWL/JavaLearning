package obj;
/* 
    面向对象【java语言的核心机制】

        - 面向对象和面向过程的区别：
            * 面向过程：主要关注是实现的具体过程，因果关系【继承显卡的开发思路】
                - 优点：对于业务逻辑比较简单的程序，可以快速开发，前期投入成本低；
                - 缺点：很难解决十分复杂的业务逻辑、面向过程的方式导致软件元素之间的“耦合度”非常高，只要其中一点出现问题，整个系统将会受到影响，导致最终软件的“扩展力”差。另外，由于没有独立体的概念，所以无法达到组件复用。
            * 面向对象：主要关注对象【独立体】能完成那些功能。【独立显卡的开发思路】
                - 优点：耦合度低，扩展力强，更容易解决现实世界中的复杂业务逻辑，组件复用性强。
                - 缺点：前期投入成本较高，需要进行独立体的抽取，大量的系统分析与设计。
            * C语言是纯面向过程的，C++是半面向对象，java是纯面向对象的。
            * 面向对象更符合人的思维方式。
        
        - 面向对象的三大特征：
            * 封装
            * 继承
            * 多态
            所有面向对象的编程语言都有这三大特征。
            采用面向对象的方式开发一个软件，生命周期中包括三个阶段：
                - 面向对象的分析【OOA】
                - 面向对象的设计【OOD】
                - 面向对象的编程【OOP】
        
        - 类和对象；
            * 什么是类？
                类是人类通过思考抽象出的概念，它代表了一类事物，在现实世界中是不存在的，当对象A与对象B具有共同特征时，可以从中总结抽象出一个模板，这个模板就是类。
            *什么是对象？
                对象是实际存在的个体，现实世界中存在对象。对象在程序中又称为实例(instance)。
            * 类 --【实例化】--> 对象，对象 --【抽象】--> 类。
            * 开发思维过程：
                - 程序员观察现实世界，从现实世界中寻找对象；
                - 发现N个对象所具有的的共同特征；
                - 程序员在大脑中形成一个模板【类】；
                - 程序员通过代码表述一个类；
                - 通过类就可以创建对象；
                - 通过对象之间的相互协作形成一个系统。
            * 类描述的是对象的共同特征，必须先创建对象才能访问这些特征，因为在不同对象上的特征具有不同值或内容。
            * 一个类主要描述的的信息有：
                - 状态 --> 属性
                - 动作 --> 方法
        
        - 类的定义：
            语法结构：
            [修饰符列表] class 类名
            {
                属性;  // 通常以变量形式定义的
                方法;  // 
            }
        
        - java语言中所有的class都属于引用数据类型。
 */

public class ObjectOrient
{
    public static void main(String[] args) {
        System.out.println("Java - 面向对象");
    }
}
