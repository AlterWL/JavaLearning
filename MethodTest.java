/* 
    关于java中的方法：
        - 方法的本质是一段代码，它可以完成某个特定的功能，并且可以被重复使用。
        - 方法定义在类体中，在一个类中可以定义多个方法，没有先后顺序。
        - 方法体中不能再定义方法。
        - 方法体中代码遵守自上而下顺序执行。
    
    1、语法结构【定义】：

        [修饰符列表] 返回值类型 方法名(形式参数)
        {
            方法体;
        }

        - 修饰符列表：
            * 可选项，不是必须的
            * 目前知道的形式是：public static
        - 返回值类型：
            * 方法执行结束后大多需要返回结果，结果可能是一个具体数据，这个数据叫做返回值
            * 返回值类型指定了返回数据的类型
            * 可以指定java中的任意一种类型，包括基本数据类型和所有的引用数据类型
            * 可能方法执行结束后不会返回任何数据，这是返回值类型位置须写上关键字：void
            * 返回值类型若不是void，则方法必须返回一个具体数据，若此方法没有返回任何数据时，编译器报错
            * 函数返回值的语句为“return 值;”，返回值的类型必须和方法定义时指定的类型一致，否则编译报错
            * 返回值类型是void时，方法体中不能有“return 值;”语句，但可以写“return;”
            * 只要带有return关键字的语句执行，该语句所在的方法结束
        - 方法名：
            * 合法的标识符
            * 最好见名知意
            * 最好是动词
            * 首字母要求小写，后面每个单词首字母大写
        - 形式参数列表：【简称形参】
            * 形参是局部变量
            * 形参个数可以是：0~N个
            * 多个形参之间用逗号隔开
            * 形参中起决定性作用的是形参的参数类型，形参的名字就是局部变量的名字
            * 方法在调用时，实际传给方法的真实参数称为实际参数【简称实参】
            * 实参和形参列表必须满足：数量相同，类型对应形同
        - 方法体：
            一段java语句片段，由大括号括起来，执行顺序自上而下。
    
    2、调用：
        方法只在被调用时才执行，调用语法：【方法修饰符列表中有static时】
        类名.方法名(实参列表参数)
 */

public class MethodTest
{
    public static void main(String[] args)
    {

    }
}
